                                                                                                                                                                                                                                                                                                                              

/*회원*/
CREATE SEQUENCE  USER_SEQ;
CREATE TABLE TBL_USER(
	USER_NUMBER NUMBER PRIMARY KEY,
	USER_ID VARCHAR2(1000),
	USER_PW VARCHAR2(1000),
	USER_NICKNAME VARCHAR2(1000),
	USER_EMAIL VARCHAR2(1000),
	USER_GENDER NUMBER,  /* 0 남자 1 여자 */
	USER_PHONENUM VARCHAR2(1000),
	USER_STATUS NUMBER, 
	USER_COINBALANCE NUMBER, /*코인 잔액*/
	USER_ACCESSTOKEN VARCHAR2(1000) DEFAULT('NOTOKEN') /*카카오톡 토큰*/
);



CREATE SEQUENCE NOVEL_SEQ;
/*소설(목록)*/
CREATE TABLE TBL_NOVEL(
	NOVEL_NUMBER NUMBER PRIMARY KEY,
	USER_NUMBER NUMBER, /*FK, 작성자 회원번호*/
	NOVEL_TITLE VARCHAR2(1000),
	USER_NICKNAME VARCHAR2(1000),
	NOVEL_HASHTAG VARCHAR2(1000), /*예) #로맨스 #메카물 #마법사*/
	NOVEL_UPLOADDATE DATE DEFAULT SYSDATE, /* 등록일 */
	NOVEL_UPDATEDATE DATE DEFAULT SYSDATE,  /* */
	NOVEL_MONDAY NUMBER,
	NOVEL_TUESDAY NUMBER,
	NOVEL_WEDNESDAY NUMBER,
	NOVEL_THURSDAY NUMBER,
	NOVEL_FRIDAY NUMBER,
	NOVEL_SATURDAY NUMBER,
	NOVEL_SUNDAY NUMBER,
	NOVEL_CATEGORY VARCHAR2(1000), /* 큰 카테고리 첫번째 태그 연결*/
	NOVEL_STATUS NUMBER, /*작품 상태 0휴재, 1연재, 2완결, 3 숨김*/
	NOVEL_SERIALSTATUS NUMBER, /*정기연재 OR 자유연재 상태*/
	NOVEL_INTRO VARCHAR2(2000), /* 소설 소개*/ 
	CONSTRAINT FK_USER_NUMBER FOREIGN KEY(USER_NUMBER) REFERENCES TBL_USER(USER_NUMBER) ON DELETE CASCADE 
); 



CREATE SEQUENCE SUBNOVEL_SEQ;
/*소설(한 회차)*/
CREATE TABLE TBL_SUBNOVEL(
	SUBNOVEL_NUMBER NUMBER PRIMARY KEY,
	NOVEL_NUMBER NUMBER,/*FK*/
	USER_NUMBER NUMBER,  /*FK*/ 
	SUBNOVEL_TITLE VARCHAR2(1000),
	SUBNOVEL_WRITERCOMMENT VARCHAR2(3500), /*작가의 작품 후기(매 회차 마다)*/
	SUBNOVEL_UPLOADDATE DATE DEFAULT SYSDATE,
	SUBNOVEL_UPDATEDATE DATE DEFAULT SYSDATE,
	SUBNOVEL_VIEWCOUNT NUMBER, /*조회수*/
	SUBNOVEL_LIKECOUNT NUMBER, /*좋아요 수*/
	SUBNOVEL_STATUS NUMBER /*회차 상태 0 숨김, 1 보여짐*/,
	CONSTRAINT FK_SUBNOVEL_NOVEL_NUMBER FOREIGN KEY(NOVEL_NUMBER) REFERENCES TBL_NOVEL(NOVEL_NUMBER) ON DELETE CASCADE ,
	CONSTRAINT FK_SUBNOVEL_USER_NUMBER FOREIGN KEY(USER_NUMBER) REFERENCES TBL_USER(USER_NUMBER) ON DELETE CASCADE 
);

CREATE SEQUENCE NOVELFILE_SEQ;
/*소설원고파일*/
CREATE TABLE TBL_NOVELFILE(		 
	NOVELFILE_NUMBER NUMBER PRIMARY KEY, /*파일번호, 소설원고*/
	NOVEL_NUMBER NUMBER,   /*FK*/
	SUBNOVEL_NUMBER NUMBER, /* FK */
	USER_NUMBER NUMBER,
	NOVELFILE_FILEPATH VARCHAR2(1000),
	NOVELFILE_ORIGINFILENAME VARCHAR2(1000),
	NOVELFILE_FILENAME VARCHAR2(1000),
	NOVELFILE_UPLOADDATE DATE DEFAULT SYSDATE,
	NOVELFILE_UPDATEDATE DATE DEFAULT SYSDATE,
	CONSTRAINT FK_NOVELFILE_SUBNOVEL_NUMBER FOREIGN KEY(SUBNOVEL_NUMBER) REFERENCES TBL_SUBNOVEL(SUBNOVEL_NUMBER) ON DELETE CASCADE,
	CONSTRAINT FK_NOVELFILE_USER_NUMBER FOREIGN KEY(USER_NUMBER) REFERENCES TBL_USER(USER_NUMBER) ON DELETE CASCADE,
	CONSTRAINT FK_NOVELFILE_NOVEL_NUMBER FOREIGN KEY(NOVEL_NUMBER) REFERENCES TBL_NOVEL(NOVEL_NUMBER) ON DELETE CASCADE
);



CREATE SEQUENCE REPLY_SEQ;
/*한 회차의 댓글*/
CREATE TABLE TBL_REPLY(	
	REPLY_NUMBER NUMBER PRIMARY KEY,
	USER_NUMBER  NUMBER, /* fK */
	NOVEL_NUMBER NUMBER,  /* fk */
	SUBNOVEL_NUMBER NUMBER,  /* fk */
	REPLY_CONTENT VARCHAR2(3000),
	REPLY_UPLOADDATE DATE DEFAULT SYSDATE, /*댓글 작성 시간*/
	REPLY_UPDATEDATE DATE DEFAULT SYSDATE, /*댓글 수정 시간*/
	REPLY_UP NUMBER DEFAULT (0), /*추천*/
	REPLY_REPORT NUMBER DEFAULT (0),/*신고*/
	CONSTRAINT FK_REPLY_USER_NUMBER FOREIGN KEY(USER_NUMBER) REFERENCES TBL_USER(USER_NUMBER) ON DELETE CASCADE,
	CONSTRAINT FK_REPLY_NOVEL_NUMBER FOREIGN KEY(NOVEL_NUMBER) REFERENCES TBL_NOVEL(NOVEL_NUMBER) ON DELETE CASCADE,
	CONSTRAINT FK_REPLY_SUBNOVEL_NUMBER FOREIGN KEY(SUBNOVEL_NUMBER) REFERENCES TBL_SUBNOVEL(SUBNOVEL_NUMBER) ON DELETE CASCADE
);



CREATE SEQUENCE ILLUSTPROFILE_SEQ;
/* 일러스트 작가 프로필*/
CREATE TABLE TBL_ILLUSTPROFILE(
	ILLUSTPROFILE_NUMBER NUMBER PRIMARY KEY,
	USER_NUMBER NUMBER,
	ILLUSTPROFILE_SHORTINTRO VARCHAR2(1000),
	ILLUSTPROFILE_DETAILINTRO VARCHAR2(1000),
	ILLUSTPROFILE_CATEGORY VARCHAR2(1000),
	ILLUSTPROFILE_WEBSITE VARCHAR2(1000),
	CONSTRAINT TBL_ILLUPROFILE_FK_USER_NUMBER FOREIGN KEY(USER_NUMBER) REFERENCES TBL_USER(USER_NUMBER)ON DELETE CASCADE
);

CREATE SEQUENCE PAY_SEQ;
/*코인 결제내역(캐쉬충전, 현금을 코인으로)*/
CREATE TABLE TBL_PAY(
	PAY_NUMBER NUMBER PRIMARY KEY, /*거래번호*/
	USER_NUMBER NUMBER,/*FK*/
	PAY_CHARGE NUMBER, /*실제 사용자가 결제한 금액*/
	PAY_COINCOUNT NUMBER,/*환전된 코인*/
	PAY_DATE DATE DEFAULT SYSDATE,
	PAY_STATUS NUMBER , /* 환불 및 기타 상태 */
	CONSTRAINT FK_PAY_USER_NUMBER FOREIGN KEY(USER_NUMBER) REFERENCES TBL_USER(USER_NUMBER)ON DELETE CASCADE
);  


CREATE SEQUENCE SUPPORT_SEQ;
/*후원(전체, 회차)*/
CREATE TABLE TBL_SUPPORT(
	SUPPORT_NUMBER NUMBER PRIMARY KEY,
	SUPPORT_SPONSER NUMBER, /*후원한 사람, USERNUM으로 불러와야할듯*/
	SUPPORT_RECEIVER, /*FK, 후원 받은 사람*/
	NOVEL_NUMBER NUMBER, /*FK, 소설 번호*/
	SUPPORT_COIN NUMBER, /*후원 금액 = 차감 코인*/
	SUPPORT_DATE DATE DEFAULT SYSDATE, /*후원 날짜*/
	CONSTRAINT FK_TBL_SUPPORT_USER_NUMBER FOREIGN KEY(SUPPORT_SPONSER) REFERENCES TBL_USER(USER_NUMBER) ON DELETE CASCADE,
	CONSTRAINT FK_TBL_SUPPORT_SUPPORT FOREIGN KEY(SUPPORT_RECEIVER) REFERENCES TBL_NOVEL(NOVEL_NUMBER) ON DELETE CASCADE
);


CREATE SEQUENCE BUYCHAPTER_SEQ;
/*회차 구매내역*/
CREATE TABLE TBL_BUYCHAPTER(
	BUYCHAPTER_NUMBER NUMBER PRIMARY KEY, /*회차 구매번호*/
	NOVEL_NUMBER NUMBER, /*FK, 소설번호*/
	SUBNOVEL_NUMBER NUMBER, /*FK, 회차번호*/
	USER_NUMBER NUMBER,/* FK 구매한 유저 */
	BUYCHAPTER_COIN NUMBER, /*차감코인*/
	BUYCHAPTER_DATE DATE DEFAULT SYSDATE, /*구매날짜*/
	BUYCHAPTER_STATUS NUMBER DEFAULT (0) ,
	CONSTRAINT FK_BUYCHAP_NOVEL_NUMBER FOREIGN KEY(NOVEL_NUMBER) REFERENCES TBL_NOVEL(NOVEL_NUMBER)ON DELETE CASCADE,
	CONSTRAINT FK_BUYCHAP_SUBNOVEL_NUMBER FOREIGN KEY(SUBNOVEL_NUMBER) REFERENCES TBL_SUBNOVEL(SUBNOVEL_NUMBER)ON DELETE CASCADE,
	CONSTRAINT FK_BUYCHAP_USER_NUMBER FOREIGN KEY(USER_NUMBER) REFERENCES TBL_USER(USER_NUMBER)ON DELETE CASCADE
);


CREATE SEQUENCE MYPICK_SEQ;
/*찜한 소설*/
CREATE TABLE TBL_MYPICK(
	MYPICK_NUMBER NUMBER PRIMARY KEY, 
	MYPICK_PICK NUMBER, /*찜이면 1 아니면 0 ?*/ 
	NOVEL_NUMBER NUMBER, /*FK*/
	USER_NUMBER NUMBER, /*FK*/
	CONSTRAINT TBL_MYPICK_FK_NOVEL_NUMBER FOREIGN KEY(NOVEL_NUMBER) REFERENCES TBL_NOVEL(NOVEL_NUMBER)ON DELETE CASCADE,
	CONSTRAINT TBL_MYPICK_FK_USER_NUMBER FOREIGN KEY(USER_NUMBER) REFERENCES TBL_USER(USER_NUMBER) ON DELETE CASCADE
);











CREATE SEQUENCE ILLUST_SEQ;
/*일러스트*/
CREATE TABLE TBL_ILLUST(
	ILLUST_NUMBER NUMBER PRIMARY KEY,
	USER_NUMBER NUMBER, /*작가 USERNUM - FK */
	ILLUST_TITLE VARCHAR2(1000),
	ILLUST_CONTENT VARCHAR2(3000),
	ILLUST_UPLOADDATE DATE DEFAULT SYSDATE,     /* 작성 시간*/
	ILLUST_UPDATEDATE DATE DEFAULT SYSDATE, /* 수정시간 */
	ILLUST_HASHTAG VARCHAR2(1000), /*해시태그*/
	ILLUST_VIEWCOUNT NUMBER DEFAULT  0, /*조회수*/
	ILLUST_LIKE NUMBER DEFAULT (0), /*각 일러스트에 대한 좋아요 개수*/
	ILLUST_SHORTINTRO  VARCHAR2(1000), /*작품에 대한 짧은 소개*/
	CONSTRAINT  TBL_ILLUST_FK_USER_NUMBER FOREIGN KEY(USER_NUMBER) REFERENCES TBL_USER(USER_NUMBER) ON DELETE CASCADE 
	 /* 케이케이드 */
);






CREATE SEQUENCE MYILLUST_SEQ;
/*찜한 일러스트*/
CREATE TABLE TBL_MYILLUST(
    MYILLUST_NUMBER NUMBER PRIMARY KEY,
	MYILLUST_STATUS NUMBER DEFAULT(0), /* 찜이면 1 아니면 0 */
	USER_NUMBER NUMBER, /*FK, 찜한 회원번호*/
	ILLUST_NUMBER NUMBER, /*FK*/
	CONSTRAINT TBL_MYILLUST_FK_USER_NUMBER FOREIGN KEY(USER_NUMBER) REFERENCES TBL_USER(USER_NUMBER)  ON DELETE CASCADE ,
	CONSTRAINT TBL_MYILLUST_FK_ILLUST_NUMBER FOREIGN KEY(ILLUST_NUMBER) REFERENCES TBL_ILLUST(ILLUST_NUMBER)  ON DELETE CASCADE 
);

CREATE SEQUENCE RECENTVIEW_SEQ;
/* 최근 본 작품 */
CREATE TABLE TBL_RECENTVIEW(
	RECENTVIEW_NUMBER NUMBER PRIMARY KEY, /* 최근 본 작품 번호*/
	USER_NUMBER NUMBER,
	NOVEL_NUMBER NUMBER,
	CONSTRAINT FK_RECENTVIEW_USER_NUMBER FOREIGN KEY(USER_NUMBER) REFERENCES TBL_USER(USER_NUMBER) ON DELETE CASCADE ,
	CONSTRAINT FK_RECENTVIEW_NOVEL_NUMBER FOREIGN KEY(NOVEL_NUMBER) REFERENCES TBL_NOVEL(NOVEL_NUMBER) ON DELETE CASCADE 
);






CREATE SEQUENCE NOVELIMGFILE_SEQ;
/* 소설 표지파일 */
CREATE TABLE TBL_NOVELIMGFILE(
	NOVELIMGFILE_NUMBER NUMBER PRIMARY KEY,
	NOVEL_NUMBER NUMBER,      /*소설NUM FK*/ 
	USER_NUMBER NUMBER,
	NOVELIMGFILE_FILEPATH VARCHAR2(1000),
	NOVELIMGFILE_ORIGINFILENAME VARCHAR2(1000),
	NOVELIMGFILE_FILENAME VARCHAR2(1000),
	NOVELIMGFILE_UPLOADDATE DATE DEFAULT SYSDATE,
	NOVELIMGFILE_UPDATEDATE DATE DEFAULT SYSDATE,
	CONSTRAINT FK_NOVIMGFILE_USER_NUMBER FOREIGN KEY(USER_NUMBER) REFERENCES TBL_USER(USER_NUMBER) ON DELETE CASCADE ,	
	CONSTRAINT FK_NOVIMGFILE_NOVEL_NUMBER FOREIGN KEY(NOVEL_NUMBER) REFERENCES TBL_NOVEL(NOVEL_NUMBER) ON DELETE CASCADE 
);

CREATE SEQUENCE ILLUSTIMGFILE_SEQ;
/*일러스트 이미지파일*/
CREATE TABLE TBL_ILLUSTIMGFILE(
	ILLUSTIMGFILE_NUMBER NUMBER PRIMARY KEY,
	ILLUST_NUMBER NUMBER, /* 일러스트 게시글 번호 */
	USER_NUMBER NUMBER,
	ILLUSTIMGFILE_FILEPATH VARCHAR2(1000),
	ILLUSTIMGFILE_ORIGINFILENAME VARCHAR2(1000),
	ILLUSTIMGFILE_FILENAME VARCHAR2(1000),
	ILLUSTIMGFILE_UPLOADDATE DATE DEFAULT SYSDATE,
	ILLUSTIMGFILE_UPDATEDATE DATE DEFAULT SYSDATE,
	CONSTRAINT FK_ILLUIMGFILE_USER_NUMBER FOREIGN KEY(USER_NUMBER) REFERENCES TBL_USER(USER_NUMBER) ON DELETE CASCADE ,
	CONSTRAINT FK_ILLUIMGFILE_ILLUST_NUMBER FOREIGN KEY(ILLUST_NUMBER) REFERENCES TBL_ILLUST(ILLUST_NUMBER) ON DELETE CASCADE 
);




CREATE SEQUENCE PROFILEIMGFILE_SEQ;
/* 프로필 이미지파일*/
CREATE TABLE TBL_PROFILEIMGFILE(
	PROFILEIMGFILE_NUMBER NUMBER PRIMARY KEY,
	USER_NUMBER NUMBER,
	PROFILEIMGFILE_FILEPATH VARCHAR2(1000),
	PROFILEIMGFILE_ORIGINFILENAME VARCHAR2(1000),
	PROFILEIMGFILE_FILENAME VARCHAR2(1000),
	PROFILEIMGFILE_UPLOADDATE DATE DEFAULT SYSDATE,
	PROFILEIMGFILE_UPDATEDATE DATE DEFAULT SYSDATE,
	CONSTRAINT FK_PROIMGFILE_USER_NUMBER FOREIGN KEY(USER_NUMBER) REFERENCES TBL_USER(USER_NUMBER)ON DELETE CASCADE 
);


CREATE SEQUENCE INQUIRY_SEQ;
/*문의*/
CREATE TABLE TBL_INQUIRY(
	INQUIRY_NUMBER NUMBER PRIMARY KEY,
	USER_NUMBER NUMBER, /*닉네임을 가져오기 위한 FK*/
	INQUIRY_TITLE VARCHAR2(1000), /*문의 제목*/
	INQUIRY_CONTENT VARCHAR2(1000), /*문의 내용*/
	INQUIRY_ANSWER VARCHAR2(1000), /*문의 답변*/
	INQUIRY_STATUS NUMBER, /*답변 대기중, 답변 완료*/
	INQUIRY_DATE DATE, /*답변 요청시간 */
	INQUIRY_REPDATE DATE, /* 답변 요청시간 */
	CONSTRAINT FK_INQUIRY_USER_NUMBER FOREIGN KEY(USER_NUMBER) REFERENCES TBL_USER(USER_NUMBER) ON DELETE CASCADE 

);


/* 채팅 */
























